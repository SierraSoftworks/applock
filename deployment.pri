# checksum 0x9840 version 0x40002
# This file was generated by an application wizard of Qt Creator.
# The code below handles deployment to Symbian and Maemo, aswell as copying
# of the application data to shadow build directories on desktop.
# It is recommended not to modify this file, since newer versions of Qt Creator
# may offer an updated version of it.

defineTest(qtcAddDeployment) {
for(deploymentfolder, DEPLOYMENTFOLDERS) {
    item = item$${deploymentfolder}
    itemsources = $${item}.sources
    $$itemsources = $$eval($${deploymentfolder}.source)
    itempath = $${item}.path
    $$itempath = $$eval($${deploymentfolder}.target)
    export($$itemsources)
    export($$itempath)
    DEPLOYMENT += $$item
}

MAINPROFILEPWD = $$PWD

unix {
    maemo5 {
        desktopfile.path = /usr/share/applications/hildon
    }
    else {
	desktopfile.path = /usr/share/applications
    }

	copyCommand =
	for(deploymentfolder, DEPLOYMENTFOLDERS) {
	    source = $$MAINPROFILEPWD/$$eval($${deploymentfolder}.source)
	    source = $$replace(source, \\\\, /)
	    target = $$OUT_PWD/$$eval($${deploymentfolder}.target)
	    target = $$replace(target, \\\\, /)
	    sourcePathSegments = $$split(source, /)
	    targetFullPath = $$target/$$last(sourcePathSegments)
	    !isEqual(source,$$targetFullPath) {
		!isEmpty(copyCommand):copyCommand += &&
		copyCommand += $(MKDIR) \"$$target\"
		copyCommand += && $(COPY_DIR) \"$$source\" \"$$target\"
	    }
	}
	!isEmpty(copyCommand) {
	    copyCommand = @echo Copying application data... && $$copyCommand
	    copydeploymentfolders.commands = $$copyCommand
	    first.depends = $(first) copydeploymentfolders
	    export(first.depends)
	    export(copydeploymentfolders.commands)
	    QMAKE_EXTRA_TARGETS += first copydeploymentfolders
	}

    installPrefix = /opt/applock
    for(deploymentfolder, DEPLOYMENTFOLDERS) {
        item = item$${deploymentfolder}
        itemfiles = $${item}.files
        $$itemfiles = $$eval($${deploymentfolder}.source)
        itempath = $${item}.path
        $$itempath = $${installPrefix}/$$eval($${deploymentfolder}.target)
        export($$itemfiles)
        export($$itempath)
        INSTALLS += $$item
    }
    icon.files = $${TARGET}.png
    icon.path = /usr/share/icons/hicolor/64x64/apps
    desktopfile.files = $${TARGET}.desktop
    target.path = $${installPrefix}
    event.files = applock
    event.path = /etc/event.d
    service.files = com.sierrasoftworks.AppLock.service
    service.path = /usr/share/dbus-1/services
    init.files = init.d/applock
    init.path = /etc/init.d
    export(icon.files)
    export(icon.path)
    export(desktopfile.files)
    export(desktopfile.path)
    export(target.path)
    export(event.files)
    export(event.path)
    export(service.files)
    export(service.path)
    export(init.files)
    export(init.path)
    INSTALLS += desktopfile icon target event service init
}

export (ICON)
export (INSTALLS)
export (DEPLOYMENT)
export (TARGET.EPOCHEAPSIZE)
export (TARGET.CAPABILITY)
export (LIBS)
export (QMAKE_EXTRA_TARGETS)
}
